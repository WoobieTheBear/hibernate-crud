# connection details PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/tutorial_db
# [INFO]: this user and password is referenced in ./setup.sql
spring.datasource.username=tutorial_user
spring.datasource.password=th3-P455word+f0r-Connection
spring.jpa.open-in-view = true
# [INFO]: following line is redundant
# spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
# [WARNING]: following statement will "execute drop table if exists <table-name> cascade"
# spring.jpa.hibernate.ddl-auto = create
# [WARNING]: following statement will keep existing data
spring.jpa.hibernate.ddl-auto = update

# set custom global spring variables
maintainer.name = Mr. Black
maintainer.email = tester@test.com

# server settings
server.port = 8837
server.servlet.context-path = /black

# management settings
# spring.main.lazy-initialization = true
management.endpoints.web.base-path = /check
management.endpoints.web.exposure.include = health, info, auditevents, beans, threaddump, mappings
management.info.env.enabled = true
info.crud.author = Mr. Black
info.crud.description = The basic setup for spring boot and postgresql crud
info.crud.version = 1.0.0
spring.main.banner-mode = off

# logging definitions (legel can be DEBUG, TRACE, WARN, ERROR)
logging.level.root = WARN
logging.level.io.black = WARN
logging.level.org.hibernate.SQL = WARN
logging.level.org.hibernate.orm.jdbc.bind = WARN
logging.file.name = black.log
logging.file.path = C:\\Users\\ls\\Documents\\ud-spring-boot-3\\00-exercises\\03-black-CRUD\\crud

# security definitions
spring.security.user.name = admin
spring.security.user.password = My4dmin+Pa55word

